{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kappa\\\\study\\\\react-guide-material\\\\05_state_and_event\\\\src\\\\090_practice_state_props\\\\start\\\\Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u7DF4\\u7FD2\\u554F\\u984C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u30AB\\u30A6\\u30F3\\u30C8\\u306E\\u66F4\\u65B0\\uFF08CountUpdate\\uFF09\\u3068\\u8868\\u793A\\uFF08CountResult\\uFF09\\u3092\\u5225\\u306E\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u306B\\u5206\\u96E2\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002Example\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u5185\\u3067\\u73FE\\u5728\\u306E\\u30AB\\u30A6\\u30F3\\u30C8\\u306E\\u5024\\u3092\\u7BA1\\u7406\\u3059\\u308Bstate\\u3092\\u4E00\\u3064\\u5B9A\\u7FA9\\u3057\\u3066\\u3053\\u308C\\u307E\\u3067\\u306E\\u30EC\\u30AF\\u30C1\\u30E3\\u30FC\\u3067\\u5B9F\\u88C5\\u3057\\u305F\\u3088\\u3046\\u306A\\u30AB\\u30A6\\u30F3\\u30BF\\u30FC\\u3092\\u4F5C\\u6210\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountResult, {\n      title: \"\\u30AB\\u30A6\\u30F3\\u30C8\",\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CountUpdate, {\n      setCount: setCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Example, \"RpyMek13f3iNeQO0Gs9DEYmHKoY=\");\n_c = Example;\nconst CountResult = ({\n  title,\n  count\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: [title, \":\", count]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n_c2 = CountResult;\nconst CountUpdate = ({\n  count,\n  setCount\n}) => {\n  const countUp = () => {\n    setCount(prevCount => prevCount + 1);\n  };\n  const countDown = () => {\n    setCount(prevCount => prevCount - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countUp,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countDown,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c3 = CountUpdate;\nexport default Example;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Example\");\n$RefreshReg$(_c2, \"CountResult\");\n$RefreshReg$(_c3, \"CountUpdate\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Example","_s","count","setCount","children","fileName","_jsxFileName","lineNumber","columnNumber","CountResult","title","CountUpdate","_c","_c2","countUp","prevCount","countDown","onClick","_c3","$RefreshReg$"],"sources":["C:/Users/kappa/study/react-guide-material/05_state_and_event/src/090_practice_state_props/start/Example.js"],"sourcesContent":["import { useState } from \"react\";\r\nconst Example = () => {\r\n  const [count,setCount] = useState(0);\r\n  return (\r\n    <>\r\n      <h3>練習問題</h3>\r\n      <p>カウントの更新（CountUpdate）と表示（CountResult）を別のコンポーネントに分離してください。Exampleコンポーネント内で現在のカウントの値を管理するstateを一つ定義してこれまでのレクチャーで実装したようなカウンターを作成してください。</p>\r\n\r\n        <CountResult title=\"カウント\" count = {count}/>\r\n        <CountUpdate setCount = {setCount}/> \r\n     \r\n    </>\r\n  );\r\n};\r\nconst CountResult = ({title,count}) => {\r\n    return(\r\n      <h3>{title}:{count}</h3>\r\n    )\r\n  }\r\n\r\nconst CountUpdate = ({count,setCount}) => {\r\n  const countUp = () => {\r\n    setCount(prevCount =>(prevCount+1));\r\n  };\r\n  const countDown = () => {\r\n    setCount(prevCount =>(prevCount-1));\r\n  };\r\n  return (\r\n    <>\r\n      <button onClick={countUp}>+</button>\r\n      <button onClick={countDown}>-</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACjC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACpC,oBACEE,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbX,OAAA;MAAAO,QAAA,EAAG;IAAmI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAExIX,OAAA,CAACY,WAAW;MAACC,KAAK,EAAC,0BAAM;MAACR,KAAK,EAAIA;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3CX,OAAA,CAACc,WAAW;MAACR,QAAQ,EAAIA;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAEtC,CAAC;AAEP,CAAC;AAACP,EAAA,CAZID,OAAO;AAAAY,EAAA,GAAPZ,OAAO;AAab,MAAMS,WAAW,GAAGA,CAAC;EAACC,KAAK;EAACR;AAAK,CAAC,KAAK;EACnC,oBACEL,OAAA;IAAAO,QAAA,GAAKM,KAAK,EAAC,GAAC,EAACR,KAAK;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAE5B,CAAC;AAAAK,GAAA,GAJGJ,WAAW;AAMjB,MAAME,WAAW,GAAGA,CAAC;EAACT,KAAK;EAACC;AAAQ,CAAC,KAAK;EACxC,MAAMW,OAAO,GAAGA,CAAA,KAAM;IACpBX,QAAQ,CAACY,SAAS,IAAIA,SAAS,GAAC,CAAE,CAAC;EACrC,CAAC;EACD,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBb,QAAQ,CAACY,SAAS,IAAIA,SAAS,GAAC,CAAE,CAAC;EACrC,CAAC;EACD,oBACElB,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA;MAAQoB,OAAO,EAAEH,OAAQ;MAAAV,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpCX,OAAA;MAAQoB,OAAO,EAAED,SAAU;MAAAZ,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACtC,CAAC;AAEP,CAAC;AAACU,GAAA,GAbIP,WAAW;AAejB,eAAeX,OAAO;AAAC,IAAAY,EAAA,EAAAC,GAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}